# Generated by Django 4.2.7 on 2024-09-04 04:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HuamiAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_column='email', db_comment='huami account email address', help_text='화웨이 계정 이메일', max_length=254, unique=True)),
                ('password', models.CharField(db_column='password', db_comment='huami account password address', help_text='화웨이 계정 패스워드', max_length=100)),
                ('sync_date', models.DateTimeField(db_column='sync_date', db_comment='huami account sync date', default=datetime.datetime(1970, 1, 1, 0, 0), help_text='화웨이 계정 동기화 날짜')),
                ('note', models.TextField(blank=True, db_column='note', db_comment='information of user', default='정보를 입력해주세요.', help_text='사용자에 대한 간략한 설명', null=True)),
                ('user', models.OneToOneField(db_column='user_id', db_comment='user id', help_text='유저 id', on_delete=django.db.models.deletion.CASCADE, related_name='huami', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '화웨이 계정',
                'verbose_name_plural': '화웨이 계정',
                'db_table': 'huami_account',
                'ordering': ['email', 'sync_date'],
            },
        ),
        migrations.CreateModel(
            name='HealthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='date', db_comment='기록 시간정보', help_text='YYYY-MM-DD 형식으로 입력할 수 있습니다.')),
                ('heart_rate', models.TextField(db_column='heart', db_comment='심박수', help_text='1분 단위의 하루 심박수를 문자열로 저장', null=True)),
                ('stress', models.TextField(db_column='stress', db_comment='스트레스', help_text='1분 단위의 하루 스트레스를 문자열로 저장', null=True)),
                ('spo2', models.TextField(db_column='spo2', db_comment='혈중 산소포화도', help_text='1분 단위의 하루 혈중 산소포화도를 문자열로 저장', null=True)),
                ('step_count', models.TextField(db_column='steps', db_comment='걸음 수', help_text='1분 단위의 하루 걸음수를 문자열로 저장', null=True)),
                ('sleep_quality', models.TextField(db_column='sleep', db_comment='1분 단위의 수면의 질을 문자열로 저장', null=True)),
                ('weight', models.FloatField(db_column='weight', db_comment='무게(kg)', help_text='무게를 입력해주세요. (kg단위)', null=True)),
                ('height', models.FloatField(db_column='height', db_comment='키(m)', help_text='키를 입력해주세요. (m단위)', null=True)),
                ('age', models.IntegerField(db_column='age', db_comment='나이', help_text='나이를 입력하세요 (세)', null=True)),
                ('note', models.TextField(blank=True, db_column='note', db_comment='비고', default='[비고]', help_text='건강상태에 대한 기록을 입력하세요.')),
                ('huami_account', models.ForeignKey(db_column='account', db_comment='account info', help_text='huami 계정정보입니다.', on_delete=django.db.models.deletion.CASCADE, related_name='health', to='huami.huamiaccount')),
            ],
            options={
                'verbose_name': '건강 데이터',
                'verbose_name_plural': '건강 데이터',
            },
        ),
    ]
